<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.report.mapper.MeetingMapper">

    <!--meeting的映射结果集-->
    <resultMap type="com.report.entity.Meeting" id="MeetingMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="reportId" column="report_id" jdbcType="INTEGER"/>
        <result property="reporterId" column="reporter_id" jdbcType="VARCHAR"/>
        <result property="presenterId" column="presenter_id" jdbcType="VARCHAR"/>
        <result property="reportTime" column="report_time" jdbcType="TIMESTAMP"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="appointmentEnd" column="appointment_end" jdbcType="TIMESTAMP"/>
        <result property="capacity" column="capacity" jdbcType="INTEGER"/>
    </resultMap>

    <!--全部字段-->
    <sql id="allColumn"> id, report_id, reporter_id, presenter_id, report_time, address, appointment_end, capacity </sql>

    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="reportId != null">
            report_id,
        </if>
        <if test="reporterId != null">
            reporter_id,
        </if>
        <if test="presenterId != null">
            presenter_id,
        </if>
        <if test="reportTime != null">
            report_time,
        </if>
        <if test="address != null and address != ''">
            address,
        </if>
        <if test="appointmentEnd != null">
            appointment_end,
        </if>
        <if test="capacity != null">
            capacity,
        </if>
    </sql>

    <!--添加语句的值列表-->
    <sql id="insertValue">
        <if test="reportId != null">
            #{reportId},
        </if>
        <if test="reporterId != null">
            #{reporterId},
        </if>
        <if test="presenterId != null">
            #{presenterId},
        </if>
        <if test="reportTime != null">
            #{reportTime},
        </if>
        <if test="address != null and address != ''">
            #{address},
        </if>
        <if test="appointmentEnd != null">
            #{appointmentEnd},
        </if>
        <if test="capacity != null">
            #{capacity},
        </if>
    </sql>

    <!--通用对Meeting各个属性的值的非空判断，Insert、Update使用-->
    <sql id="commonsValue">
        <if test="reportId != null">
            report_id = #{reportId},
        </if>
        <if test="reporterId != null">
            reporter_id = #{reporterId},
        </if>
        <if test="presenterId != null">
            presenter_id = #{presenterId},
        </if>
        <if test="reportTime != null">
            report_time = #{reportTime},
        </if>
        <if test="address != null and address != ''">
            address = #{address},
        </if>
        <if test="appointmentEnd != null">
            appointment_end = #{appointmentEnd},
        </if>
        <if test="capacity != null">
            capacity = #{capacity},
        </if>
    </sql>

    <!--通用对Meeting各个属性的值的非空判断,Where查询使用-->
    <sql id="commonsQuery">
        <if test="reportId != null">
            and report_id = #{reportId}
        </if>
        <if test="reporterId != null">
            and reporter_id = #{reporterId},
        </if>
        <if test="presenterId != null">
            and presenter_id = #{presenterId},
        </if>
        <if test="reportTime != null">
            and report_time = #{reportTime}
        </if>
        <if test="address != null and address != ''">
            and address = #{address}
        </if>
        <if test="appointmentEnd != null">
            and appointment_end = #{appointmentEnd}
        </if>
        <if test="capacity != null">
            and capacity = #{capacity}
        </if>
    </sql>

    <!--新增meeting:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into meeting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>

    <!--删除meeting:通过主键-->
    <delete id="deleteById">
        delete from meeting
        <where>
            id = #{id}
        </where>
    </delete>

    <!--查询单个meeting-->
    <select id="getById" resultMap="MeetingMap">
        select
        <include refid="allColumn"></include>
        from meeting
        <where>
            id = #{id}
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="listMeetings" resultMap="MeetingMap">
        select
        <include refid="allColumn"></include>
        from meeting
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsQuery"></include>
        </trim>
    </select>

    <!--通过实体作为筛选条件获取结果数量-->
    <select id="countMeetings" resultType="java.lang.Integer">
        select
        count(*)
        from meeting
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsQuery"></include>
        </trim>
    </select>

    <!--根据报告ID获取会议-->
    <select id="getByReportId" resultMap="MeetingMap">
        select
        <include refid="allColumn"></include>
        from meeting
        <where>
            report_id = #{id}
        </where>
    </select>

    <!--查询预约结束且会议时间未达到的会议-->
    <select id="listAppointmentEndMeetings" resultMap="MeetingMap">
        select m.*
        from meeting m
        left join teacher t on m.reporter_id = t.id
        where now() BETWEEN appointment_end AND report_time and t.college_id = #{collegeId}
    </select>

    <!--查询已完成的会议-->
    <select id="listFinishMeetings" resultMap="MeetingMap">
        select m.*
        from meeting m
        left join teacher t on m.reporter_id = t.id
        where now() > report_time and t.college_id = #{collegeId}
    </select>

    <!--获取指定学生预约的全部会议-->
    <select id="listAppointingMeeting" resultMap="MeetingMap">
        select m.*
        from meeting m
        left join appointment a on m.id = a.meeting_id
        where now() &lt; m.report_time and a.student_id = #{studentId}
    </select>

    <!--获取指定学生的参会记录-->
    <select id="listAppointingFinishMeeting" resultMap="MeetingMap">
        select m.*
        from meeting m
        left join appointment a on m.id = a.meeting_id
        where now() &gt; m.report_time and a.student_id = #{studentId}
    </select>

    <!--获取指定学院的开展过报告会议的学年-->
    <select id="getAllYears" resultType="java.lang.String">
        select distinct year(report_time) from meeting
        left join teacher t on reporter_id = t.id
        left join report r on report_id = r.id
        where t.college_id = #{collegeId} and r.status = 4
    </select>

    <!--通过学年和学期搜索指定学院的会议-->
    <select id="searchMeetings" resultMap="MeetingMap">
        SELECT m.* from meeting m left
        join teacher t on reporter_id = t.id
        join report r on report_id = r.id
        where t.college_id = #{collegeId} and r.status = 4
        <if test="year != null and year != 'all'">
            and year(m.report_time) = #{year}
        </if>
        <if test="semester != null and semester != 'all' and semester == 'one'">
            and month(m.report_time) &lt; '6'
        </if>
        <if test="semester != null and semester != 'all' and semester == 'two'">
            and month(m.report_time) &gt;= '6'
        </if>
    </select>

    <!--获取我已完成的会议-->
    <select id="listMyFinishMeetings" resultMap="MeetingMap">
        select
        <include refid="allColumn"></include>
        from meeting
        where now() > report_time and reporter_id = #{id}
    </select>

    <!--通过主键修改数据-->
    <update id="update">
        update meeting
        <set>
            <include refid="commonsValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

</mapper>