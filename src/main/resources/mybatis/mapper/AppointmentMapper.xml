<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="world.xuewei.mapper.AppointmentMapper">

    <!--appointment的映射结果集-->
    <resultMap type="world.xuewei.entity.Appointment" id="AppointmentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="meetingId" column="meeting_id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="appointmentTime" column="appointment_time" jdbcType="TIMESTAMP"/>
        <result property="present" column="present" jdbcType="INTEGER"/>
    </resultMap>

    <!--全部字段-->
    <sql id="allColumn"> id
    , meeting_id, student_id, appointment_time, present </sql>

    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="meetingId != null">
            meeting_id,
        </if>
        <if test="studentId != null">
            student_id,
        </if>
        <if test="appointmentTime != null">
            appointment_time,
        </if>
        <if test="present != null">
            present,
        </if>
    </sql>

    <!--添加语句的值列表-->
    <sql id="insertValue">
        <if test="meetingId != null">
            #{meetingId},
        </if>
        <if test="studentId != null">
            #{studentId},
        </if>
        <if test="appointmentTime != null">
            #{appointmentTime},
        </if>
        <if test="present != null">
            #{present},
        </if>
    </sql>

    <!--通用对Appointment各个属性的值的非空判断，Insert、Update使用-->
    <sql id="commonsValue">
        <if test="meetingId != null">
            meeting_id = #{meetingId},
        </if>
        <if test="studentId != null">
            student_id = #{studentId},
        </if>
        <if test="appointmentTime != null">
            appointment_time = #{appointmentTime},
        </if>
        <if test="present != null">
            present = #{present},
        </if>
    </sql>

    <!--通用对Appointment各个属性的值的非空判断,Where查询使用-->
    <sql id="commonsQuery">
        <if test="meetingId != null">
            and meeting_id = #{meetingId}
        </if>
        <if test="studentId != null">
            and student_id = #{studentId}
        </if>
        <if test="appointmentTime != null">
            and appointment_time = #{appointmentTime}
        </if>
        <if test="present != null">
            and present = #{present}
        </if>
    </sql>

    <!--新增appointment:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into appointment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>

    <!--删除appointment:通过主键-->
    <delete id="deleteById">
        delete from appointment
        <where>
            id = #{id}
        </where>
    </delete>

    <!--查询单个appointment-->
    <select id="getById" resultMap="AppointmentMap">
        select
        <include refid="allColumn"></include>
        from appointment
        <where>
            id = #{id}
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="listAppointments" resultMap="AppointmentMap">
        select
        <include refid="allColumn"></include>
        from appointment
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsQuery"></include>
        </trim>
    </select>

    <!--通过实体作为筛选条件获取结果数量-->
    <select id="countAppointments" resultType="java.lang.Integer">
        select
        count(*)
        from appointment
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsQuery"></include>
        </trim>
    </select>

    <!--通过主键修改数据-->
    <update id="update">
        update appointment
        <set>
            <include refid="commonsValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--更新签到状态-->
    <update id="updatePresent">
        update appointment
        set present = #{present}
        where meeting_id = #{meetingId}
          and student_id = #{studentId}
    </update>

</mapper>